geom_bar(stat = "identity")
})
}
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Academic_Yr==input$x)%>%
filter(Campus==input$y)%>%
filter(Category==input$z)%>%
ggplot(aes(x = Ethnicity))+
geom_bar()
})
}
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Academic_Yr==input$x)%>%
filter(Campus==input$y)%>%
filter(Category==input$z)%>%
ggplot(aes(x = Ethnicity,y=FilteredCountFR))+
geom_col()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC admission"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select year",choices=unique(UC_admit$Academic_Yr), selected = 2010),
selectInput("y", "Select campus", choices = unique(UC_admit$Campus), selected = "Davis"),
selectInput("z", "Select Category", choices= unique(UC_admit$Category),selected = "applicants"),
),
box(title = "Number of Students at Campus"+input$y, width = 9, plotOutput("plot", width = "800px", height = "600px")
)
)
)
)
ui <- dashboardPage(
dashboardHeader(title = "UC admission"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select campus", choices = unique(UC_admit$Campus), selected = "Davis"),
selectInput("y", "Select Category", choices= unique(UC_admit$Category),selected = "applicants"),
selectInput("z", "Select ethnicity", choices= unique(UC_admit$Ethnicity), selected ="All"),
),
box(title = "Number of Students", width = 9, plotOutput("plot", width = "800px", height = "600px")
)
)
)
)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
filter(Academic_Yr==input$x)%>%
filter(Campus==input$y)%>%
filter(Category==input$z)%>%
ggplot(aes(x = Academic_Yr,y=FilteredCountFR))+
geom_col()
})
}
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
filter(Campus==input$x)%>%
filter(Category==input$y)%>%
filter(Ethnicity==input$z)%>%
ggplot(aes(x = Academic_Yr,y=FilteredCountFR))+
geom_col()
})
}
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Campus==input$x)%>%
filter(Category==input$y)%>%
filter(Ethnicity==input$z)%>%
ggplot(aes(x = Academic_Yr,y=FilteredCountFR))+
geom_col()
})
}
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Campus==input$x)%>%
filter(Category==input$y)%>%
filter(Ethnicity==input$z)%>%
ggplot(aes(x = Academic_Yr,y=FilteredCountFR))+
geom_col()+
labs(x = "Year", y = "Number")
})
}
shinyApp(ui, server)
shinyApp(ui, server)
print("a")
print("a"+)
print("a"+"b")
print("a+b")
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Campus==input$x)%>%
filter(Category==input$y)%>%
filter(Ethnicity==input$z)%>%
ggplot(aes(x = Academic_Yr,y=FilteredCountFR))+
geom_col()+
labs(title="Number of Students",
x = "Year", y = "Number")
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC admission"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select campus", choices = unique(UC_admit$Campus), selected = "Davis"),
selectInput("y", "Select Category", choices= unique(UC_admit$Category),selected = "applicants"),
selectInput("z", "Select ethnicity", choices= unique(UC_admit$Ethnicity), selected ="All"),
)
)
)
)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Campus==input$x)%>%
filter(Category==input$y)%>%
filter(Ethnicity==input$z)%>%
ggplot(aes(x = Academic_Yr,y=FilteredCountFR))+
geom_col()+
labs(title="Number of Students in",
x = "Year", y = "Number")
})
}
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Campus==input$x)%>%
filter(Category==input$y)%>%
filter(Ethnicity==input$z)%>%
ggplot(aes(x = Academic_Yr,y=FilteredCountFR))+
geom_col()+
labs(title="Number of Students in",
x = "Year", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Campus==input$x)%>%
filter(Category==input$y)%>%
filter(Ethnicity==input$z)%>%
ggplot(aes(x = Academic_Yr,y=FilteredCountFR))+
geom_col()+
labs(title=paste("Number of Students in","Davis"),
x = "Year", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC admission"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select campus", choices = unique(UC_admit$Campus), selected = "Davis"),
selectInput("y", "Select Category", choices= unique(UC_admit$Category),selected = "applicants"),
selectInput("z", "Select ethnicity", choices= unique(UC_admit$Ethnicity), selected ="All"),
),
box(width = 9, plotOutput("plot", width = "800px", height = "600px")
)
)
)
)
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Campus==input$x)%>%
filter(Category==input$y)%>%
filter(Ethnicity==input$z)%>%
ggplot(aes(x = Academic_Yr,y=FilteredCountFR))+
geom_col()+
labs(title=paste("Number of Students in","Davis"),
x = "Year", y = "Number")
})
}
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Campus==input$x)%>%
filter(Category==input$y)%>%
filter(Ethnicity==input$z)%>%
ggplot(aes(x = Academic_Yr,y=FilteredCountFR))+
geom_col()+
labs(title=paste("Number of Students in","Davis"),
x = "Year", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Campus==input$x)%>%
filter(Category==input$y)%>%
filter(Ethnicity==input$z)%>%
ggplot(aes(x = Academic_Yr,y=FilteredCountFR))+
geom_col()+
labs(title=paste("Number of Students in",input$x),
x = "Year", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Campus==input$x)%>%
filter(Category==input$y)%>%
filter(Ethnicity==input$z)%>%
ggplot(aes(x = Academic_Yr,y=FilteredCountFR))+
geom_col()+
labs(title=paste("Number of",input$z,input$y,input$x),
x = "Year", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Campus==input$x)%>%
filter(Category==input$y)%>%
filter(Ethnicity==input$z)%>%
ggplot(aes(x = Academic_Yr,y=FilteredCountFR))+
geom_col()+
labs(title=paste("Number of",input$z,input$y,"in",input$x),
x = "Year", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC admission"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select year",choices=unique(UC_admit$Academic_Yr), selected = 2010),
selectInput("y", "Select campus", choices = unique(UC_admit$Campus), selected = "Davis"),
selectInput("z", "Select Category", choices= unique(UC_admit$Category),selected = "applicants"),
),
box(width = 9, plotOutput("plot", width = "800px", height = "600px")
)
)
)
)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Academic_Yr==input$x)%>%
filter(Campus==input$y)%>%
filter(Category==input$z)%>%
ggplot(aes(x = Ethnicity,y=FilteredCountFR))+
geom_col()+
labs(title=paste("Number of",input$y,input$z,"in year",input$x),
x = "Ethnicity", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Academic_Yr==input$x)%>%
filter(Campus==input$y)%>%
filter(Category==input$z)%>%
ggplot(aes(x = Ethnicity,y=FilteredCountFR))+
geom_col()+
labs(title=paste("Number of",input$y,input$z,"in Year",input$x),
x = "Ethnicity", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Academic_Yr==input$x)%>%
filter(Campus==input$y)%>%
filter(Category==input$z)%>%
ggplot(aes(x = order(Ethnicity),y=FilteredCountFR))+
geom_col()+
labs(title=paste("Number of",input$y,input$z,"in Year",input$x),
x = "Ethnicity", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Academic_Yr==input$x)%>%
filter(Campus==input$y)%>%
filter(Category==input$z)%>%
ggplot(aes(x = order(Ethnicity,FilteredCountFR),y=FilteredCountFR))+
geom_col()+
labs(title=paste("Number of",input$y,input$z,"in Year",input$x),
x = "Ethnicity", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Academic_Yr==input$x)%>%
filter(Campus==input$y)%>%
filter(Category==input$z)%>%
ggplot(aes(x = Ethnicity,y=FilteredCountFR))+
geom_col()+
labs(title=paste("Number of",input$y,input$z,"in Year",input$x),
x = "Ethnicity", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Academic_Yr==input$x)%>%
filter(Campus==input$y)%>%
filter(Category==input$z)%>%
ggplot(aes(x = reorder(Ethnicity,FilteredCountFR),y=FilteredCountFR))+
geom_col()+
labs(title=paste("Number of",input$y,input$z,"in Year",input$x),
x = "Ethnicity", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
shinyApp(ui, server)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Academic_Yr==input$x)%>%
filter(Campus==input$y)%>%
filter(Category==input$z)%>%
ggplot(aes(x = reorder(Ethnicity,FilteredCountFR),y=FilteredCountFR))+
geom_col()+
labs(title=paste("Ethnicity Number of",input$y,input$z,"in Year",input$x),
x = "Ethnicity", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
ui <- dashboardPage(
dashboardHeader(title = "UC admission"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select campus", choices = unique(UC_admit$Campus), selected = "Davis"),
selectInput("y", "Select Category", choices= unique(UC_admit$Category),selected = "applicants"),
selectInput("z", "Select ethnicity", choices= unique(UC_admit$Ethnicity), selected ="All"),
),
box(width = 9, plotOutput("plot", width = "800px", height = "600px")
)
)
)
)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Campus==input$x)%>%
filter(Category==input$y)%>%
filter(Ethnicity==input$z)%>%
ggplot(aes(x = Academic_Yr,y=FilteredCountFR))+
geom_col()+
labs(title=paste("Number of",input$z,input$y,"in Campus",input$x),
x = "Year", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(naniar)
UC_admit <- read_csv("data/UC_admit.csv")
miss_var_summary(UC_admit)
glimpse(UC_admit)
unique(UC_admit$Ethnicity)
ui <- dashboardPage(
dashboardHeader(title = "UC admission"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select year",choices=unique(UC_admit$Academic_Yr), selected = 2010),
selectInput("y", "Select campus", choices = unique(UC_admit$Campus), selected = "Davis"),
selectInput("z", "Select Category", choices= unique(UC_admit$Category),selected = "applicants"),
),
box(width = 9, plotOutput("plot", width = "800px", height = "600px")
)
)
)
)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Academic_Yr==input$x)%>%
filter(Campus==input$y)%>%
filter(Category==input$z)%>%
ggplot(aes(x = reorder(Ethnicity,FilteredCountFR),y=FilteredCountFR))+
geom_col()+
labs(title=paste("Ethnicity Number of",input$y,input$z,"in Year",input$x),
x = "Ethnicity", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC admission"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select campus", choices = unique(UC_admit$Campus), selected = "Davis"),
selectInput("y", "Select Category", choices= unique(UC_admit$Category),selected = "applicants"),
selectInput("z", "Select ethnicity", choices= unique(UC_admit$Ethnicity), selected ="All"),
),
box(width = 9, plotOutput("plot", width = "800px", height = "600px")
)
)
)
)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit%>%
mutate(Academic_Yr=as.factor(Academic_Yr))%>%
filter(Campus==input$x)%>%
filter(Category==input$y)%>%
filter(Ethnicity==input$z)%>%
ggplot(aes(x = Academic_Yr,y=FilteredCountFR))+
geom_col()+
labs(title=paste("Number of",input$z,input$y,"in Campus",input$x),
x = "Year", y = "Number")+
theme(plot.title = element_text(size = rel(1.5),hjust = 0.5, face="bold"))
})
}
shinyApp(ui, server)
